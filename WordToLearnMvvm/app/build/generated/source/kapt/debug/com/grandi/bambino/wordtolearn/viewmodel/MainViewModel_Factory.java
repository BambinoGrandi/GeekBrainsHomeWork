// Generated by Dagger (https://google.github.io/dagger).
package com.grandi.bambino.wordtolearn.viewmodel;

import com.grandi.bambino.wordtolearn.interactor.MainInteractor;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class MainViewModel_Factory implements Factory<MainViewModel> {
  private final Provider<MainInteractor> interactorProvider;

  public MainViewModel_Factory(Provider<MainInteractor> interactorProvider) {
    this.interactorProvider = interactorProvider;
  }

  @Override
  public MainViewModel get() {
    return provideInstance(interactorProvider);
  }

  public static MainViewModel provideInstance(Provider<MainInteractor> interactorProvider) {
    return new MainViewModel(interactorProvider.get());
  }

  public static MainViewModel_Factory create(Provider<MainInteractor> interactorProvider) {
    return new MainViewModel_Factory(interactorProvider);
  }

  public static MainViewModel newMainViewModel(MainInteractor interactor) {
    return new MainViewModel(interactor);
  }
}
