// Generated by Dagger (https://google.github.io/dagger).
package com.grandi.bambino.wordtolearn.di;

import com.grandi.bambino.wordtolearn.model.data.SearchResult;
import com.grandi.bambino.wordtolearn.model.source.IDataSource;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import java.util.List;

public final class RepositoryModule_ProvideDataSourceRemote$app_debugFactory
    implements Factory<IDataSource<List<SearchResult>>> {
  private final RepositoryModule module;

  public RepositoryModule_ProvideDataSourceRemote$app_debugFactory(RepositoryModule module) {
    this.module = module;
  }

  @Override
  public IDataSource<List<SearchResult>> get() {
    return provideInstance(module);
  }

  public static IDataSource<List<SearchResult>> provideInstance(RepositoryModule module) {
    return proxyProvideDataSourceRemote$app_debug(module);
  }

  public static RepositoryModule_ProvideDataSourceRemote$app_debugFactory create(
      RepositoryModule module) {
    return new RepositoryModule_ProvideDataSourceRemote$app_debugFactory(module);
  }

  public static IDataSource<List<SearchResult>> proxyProvideDataSourceRemote$app_debug(
      RepositoryModule instance) {
    return Preconditions.checkNotNull(
        instance.provideDataSourceRemote$app_debug(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
