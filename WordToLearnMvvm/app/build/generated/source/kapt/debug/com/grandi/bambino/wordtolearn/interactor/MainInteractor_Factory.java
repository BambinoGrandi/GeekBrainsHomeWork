// Generated by Dagger (https://google.github.io/dagger).
package com.grandi.bambino.wordtolearn.interactor;

import com.grandi.bambino.wordtolearn.model.data.SearchResult;
import com.grandi.bambino.wordtolearn.repository.IRepository;
import dagger.internal.Factory;
import java.util.List;
import javax.inject.Provider;

public final class MainInteractor_Factory implements Factory<MainInteractor> {
  private final Provider<IRepository<List<SearchResult>>> repositoryProvider;

  public MainInteractor_Factory(Provider<IRepository<List<SearchResult>>> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public MainInteractor get() {
    return provideInstance(repositoryProvider);
  }

  public static MainInteractor provideInstance(
      Provider<IRepository<List<SearchResult>>> repositoryProvider) {
    return new MainInteractor(repositoryProvider.get());
  }

  public static MainInteractor_Factory create(
      Provider<IRepository<List<SearchResult>>> repositoryProvider) {
    return new MainInteractor_Factory(repositoryProvider);
  }

  public static MainInteractor newMainInteractor(IRepository<List<SearchResult>> repository) {
    return new MainInteractor(repository);
  }
}
